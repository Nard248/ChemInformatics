<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="QEDExampleProtocol" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if SES is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{42691EC8-0CE0-4DB9-8B3C-5379CBB967A7}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The component this component is based upon.</sci:help>
				<sci:value>EmptyProtocol</sci:value>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>grbickerton</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Thu Aug 25 16:55:15 2011</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>8.0.1.700</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>QEDExampleProtocol</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{0699CDDE-EA3B-496B-986B-CEBE05FA241E}</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>88 -50</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Building protocols in Pipeline Pilot.</sci:value>
				<sci:value>This is the help window for working with components and protocols in Pipeline Pilot. 

To create a protocol, drag items from the Components tab into the workspace. Connect them with pipes, edit their parameters, and then click Run to generate results.  

As you select components and protocols, information about using them is displayed in this help window. The parameters are displayed in the adjacent Parameters window.

For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/getstart/getstart_intro.htm&apos;)&quot;&gt;Getting Started with Pipeline Pilot&lt;/a&gt;.
</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Make Shortcut by Default</sci:legalval>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>grbickerton\Desirability\QEDExampleProtocol</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="NCI Drugs Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:value>data\NCI\nci_drugs.sd</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: The name of the file read.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading a compressed zip file, the filename within the compressed archive.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: Keeps the current value of SourceTag.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line terminate the full data block.  Setting this option off will terminate the data block upon any read of a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are terminated by a blank line. Selecting this option will terminate the data block when encountering a line containing a space as the only character in the line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of &apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as &apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 10 10:46:39 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>NCI Drugs Reader</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17268A94-9827-407d-AB77-55465755BB93}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads a file of 10,000 known drugs collected from the NCI data set</sci:value>
						<sci:value>&lt;p&gt;An SD file reader of a file of known drugs collected from the NCI compound collection.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;This component is a specific instance of the &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
 </sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>52 -445 600 265</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>NCI Drugs Reader. This is a toy data set bundled with PP - plug in whatever set of compounds you want. </sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.1.3</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Utilities\Demo Sources\NCI Drugs Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="DesirabilityCalculator" version="2">
					<sci:arg name="Weights" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>Table containing the weights for the weighted Desirability index. Depending on your taste you may want to modify these. Set the weight to 0 to remove the term.</sci:help>
						<sci:value>Properties	Weighted
MW	0.66
ALOGP	0.46
HBA	0.05
HBD	0.61
PSA	0.06
ROTB	0.65
AROM	0.48
ALERTS	0.95</sci:value>
					</sci:arg>
					<sci:arg name="Unweights" type="TextType" required="true" visibility="visible" multi="false">
						<sci:help>Table containing the weights for the unweighted Desirability index (by default weights are 1). Depending on your taste you may want to modify these. Set the weight to 0 to remove the term.</sci:help>
						<sci:value>Properties	UnWeighted
MW	1
ALOGP	1
HBA	1
HBD	1
PSA	1
ROTB	1
AROM	1
ALERTS	1</sci:value>
					</sci:arg>
					<sci:arg name="ADS_Parameters" type="TextType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>ADS Parameters table from Excel

Need to be transposed, and &quot;,&quot; replaced by &quot;.&quot;</sci:help>
						<sci:value>Properties	a	b	c	d	e	f	dx_max
MW	2.817065973	392.5754953	290.7489764	2.419764353	49.22325677	65.37051707	104.9805561
ALOGP	3.172690585	137.8624751	2.534937431	4.581497897	0.822739154	0.576295591	131.3186604
HBA	2.948620388	160.4605972	3.615294657	4.435986202	0.290141953	1.300669958	148.7763046
HBD	1.618662227	1010.051101	0.985094388	1E-12	0.713820843	0.920922555	258.1632616
PSA	1.876861559	125.2232657	62.90773554	87.83366614	12.01999824	28.51324732	104.5686167
ROTB	0.01	272.4121427	2.55837997	1.565547684	1.271567166	2.758063707	105.4420403
AROM	3.21778897	957.7374108	2.274627939	1E-12	1.317690384	0.375760881	312.337261
ALERTS	0.01	1199.094025	-0.09002883	1E-12	0.185904477	0.875193782	417.725314</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>a_MW,b_MW,c_MW,d_MW,e_MW,f_MW,dx_max_MW,a_ALOGP,b_ALOGP,c_ALOGP,d_ALOGP,e_ALOGP,f_ALOGP,dx_max_ALOGP,a_HBA,b_HBA,c_HBA,d_HBA,e_HBA,f_HBA,dx_max_HBA,a_HBD,b_HBD,c_HBD,d_HBD,e_HBD,f_HBD,dx_max_HBD,a_PSA,b_PSA,c_PSA,d_PSA,e_PSA,f_PSA,dx_max_PSA,a_ROTB,b_ROTB,c_ROTB,d_ROTB,e_ROTB,f_ROTB,dx_max_ROTB,a_AROM,b_AROM,c_AROM,d_AROM,e_AROM,f_AROM,dx_max_AROM,a_ALERTS,b_ALERTS,c_ALERTS,d_ALERTS,e_ALERTS,f_ALERTS,dx_max_ALERTS,Weight_MW,Weight_ALOGP,Weight_HBA,Weight_HBD,Weight_PSA,Weight_ROTB,Weight_AROM,Weight_ALERTS,UnWeight_MW,UnWeight_ALOGP,UnWeight_HBA,UnWeight_HBD,UnWeight_PSA,UnWeight_ROTB,UnWeight_AROM,UnWeight_ALERTS</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:value>ComponentReturnsPass</sci:value>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>       QED</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>CALCULATORNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{4E5161D3-64B7-44FE-82EB-7091EE75DCA9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Desirability Calculator</sci:value>
						<sci:value>This component calculates the desirability function for the compounds.
It ranges from 0 to 1, with 1 being good.
&lt;p&gt;Properties output: Each function desirability, plus the weighted and unweighted desirability scores

&lt;p&gt;Properties used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Molecular Weight (MW)
&lt;li&gt;Lipophilicity(ALOGP)
&lt;li&gt;Polar Surface Area(PSA)
&lt;li&gt;Number of Hydrogen Bond Acceptors (HBA)
&lt;li&gt;Number of Hydrogen Bond Donors (HBD)
&lt;li&gt;Number of Rotatable Bonds (ROTB)
&lt;li&gt;Number of Aromatic Rings (AROM)
&lt;li&gt;Number of Unwanted groups (ALERTS)*
&lt;/ul&gt;
&lt;p&gt;Ref: article&lt;/p&gt;
&lt;p&gt;*Extracted from: Lessons learnt from assembling screening libraries for drug discovery for neglected diseases, ChemMedChem. 3, 435-444 (2008), &lt;a href=&quot;http://dx.doi.org/10.1002/cmdc.200700139&quot;&gt;Link&lt;/a&gt; with the permission of Ruth Brenk&lt;/p&gt;

&lt;p&gt;Pipeline Pilot protocol by J&amp;eacuter&amp;eacutemy Besnard, algorithm by Richard Bickerton. See Hopkins lab website &lt;a href=&quot;www.hopkinslab.org&quot;&gt;www.hopkinslab.org&lt;/a&gt; for contact details and more information.&lt;/p&gt;</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Records with desirability information</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.2.500</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>jbesnard</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Aug 15 17:16:25 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Unknown</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Delimited Text Text Reader" version="2">
							<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
								<sci:value>$(ADS_Parameters)</sci:value>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>FigureOut</sci:legalval>
								<sci:legalval selected="true">Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temp</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
								<sci:help>A comma separated list of global properties which will be automatically 
exported if this protocol is published as a web service.</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
								<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>EmptyProtocol</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 27 12:39:50 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>ADS Parameters</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read Delimited Text kept with this component as a parameter value	</sci:value>
								<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.37</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>for #i in 1 .. numproperties() loop
		if ithpropertyname(#i) ne &apos;Properties&apos; then
			globalproperty(ithpropertyname(#i).&apos;_&apos;.Properties) := ithproperty(#i);
		end if;
end loop;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>get ADS in global</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>%VERSION 3%</sci:value>
								<sci:value>815 -95 400 309</sci:value>
								<sci:value>255 255 0</sci:value>
								<sci:value>Get ADS parameters
From file so easy to update  and modify without going into the script</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Delimited Text Text Reader" version="2">
							<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
								<sci:value>$(Weights)</sci:value>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>FigureOut</sci:legalval>
								<sci:legalval selected="true">Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temp</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
								<sci:help>A comma separated list of global properties which will be automatically 
exported if this protocol is published as a web service.</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
								<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>EmptyProtocol</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 27 12:39:50 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Weights</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -470</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read Delimited Text kept with this component as a parameter value	</sci:value>
								<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.37</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>globalproperty(&apos;Weight_&apos;.Properties) := Weighted;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>get weights in global</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>%VERSION 3%</sci:value>
								<sci:value>740 -495 509 221</sci:value>
								<sci:value>255 255 0</sci:value>
								<sci:value>Get weights, from file, so easy to update and modify without going into the script</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Delimited Text Text Reader" version="2">
							<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
								<sci:value>$(Unweights)</sci:value>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>FigureOut</sci:legalval>
								<sci:legalval selected="true">Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temp</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
								<sci:help>A comma separated list of global properties which will be automatically 
exported if this protocol is published as a web service.</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
								<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>EmptyProtocol</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 27 12:39:50 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unweights</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -820</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read Delimited Text kept with this component as a parameter value	</sci:value>
								<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.37</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>globalproperty(&apos;UnWeight_&apos;.Properties) := UnWeighted;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>get unweights in global</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>%VERSION 3%</sci:value>
								<sci:value>790 -820 500 221</sci:value>
								<sci:value>255 255 0</sci:value>
								<sci:value>Get weights, from file, so easy to update and modify without going into the script</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Delimited Text Text Reader" version="2">
							<sci:arg name="DelimitedText" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>The contents of a delimited text file. This is a way to include a delimited text file in a protocol without sending an additional file.</sci:help>
								<sci:value>*1[O,S,N]*1
[S,C](=[O,S])[F,Br,Cl,I]
[CX4][Cl,Br,I]
[C,c]S(=O)(=O)O[C,c]
[$([CH]),$(CC)]#CC(=O)[C,c]
[$([CH]),$(CC)]#CC(=O)O[C,c]
n[OH]
[$([CH]),$(CC)]#CS(=O)(=O)[C,c]
C=C(C=O)C=O
n1c([F,Cl,Br,I])cccc1
[CH1](=O)
[O,o][O,o]
[C;!R]=[N;!R]
[N!R]=[N!R]
[#6](=O)[#6](=O)
[S,s][S,s]
[N,n][NH2]
C(=O)N[NH2]
[C,c]=S
[$([CH2]),$([CH][CX4]),$(C([CX4])[CX4])]=[$([CH2]),$([CH][CX4]),$(C([CX4])[CX4])]
C1(=[O,N])C=CC(=[O,N])C=C1
C1(=[O,N])C(=[O,N])C=CC=C1
a21aa3a(aa1aaaa2)aaaa3
a31a(a2a(aa1)aaaa2)aaaa3
a1aa2a3a(a1)A=AA=A3=AA=A2
c1cc([NH2])ccc1
[Hg,Fe,As,Sb,Zn,Se,se,Te,B,Si,Na,Ca,Ge,Ag,Mg,K,Ba,Sr,Be,Ti,Mo,Mn,Ru,Pd,Ni,Cu,Au,Cd,Al,Ga,Sn,Rh,Tl,Bi,Nb,Li,Pb,Hf,Ho]
I
OS(=O)(=O)[O-]
[N+](=O)[O-]
C(=O)N[OH]
C1NC(=O)NC(=O)1
[SH]
[S-]
c1ccc([Cl,Br,I,F])c([Cl,Br,I,F])c1[Cl,Br,I,F]
c1cc([Cl,Br,I,F])cc([Cl,Br,I,F])c1[Cl,Br,I,F]
[CR1]1[CR1][CR1][CR1][CR1][CR1][CR1]1
[CR1]1[CR1][CR1]cc[CR1][CR1]1
[CR2]1[CR2][CR2][CR2][CR2][CR2][CR2][CR2]1
[CR2]1[CR2][CR2]cc[CR2][CR2][CR2]1
[CH2R2]1N[CH2R2][CH2R2][CH2R2][CH2R2][CH2R2]1
[CH2R2]1N[CH2R2][CH2R2][CH2R2][CH2R2][CH2R2][CH2R2]1
C#C
[OR2,NR2]@[CR2]@[CR2]@[OR2,NR2]@[CR2]@[CR2]@[OR2,NR2]
[$([N+R]),$([n+R]),$([N+]=C)][O-]
[C,c]=N[OH]
[C,c]=NOC=O
[C,c](=O)[CX4,CR0X3,O][C,c](=O)
c1ccc2c(c1)ccc(=O)o2
[O+,o+,S+,s+]
N=C=O
[NX3,NX4][F,Cl,Br,I]
c1ccccc1OC(=O)[#6]
[CR0]=[CR0][CR0]=[CR0]
[C+,c+,C-,c-]
N=[N+]=[N-]
C12C(NC(N1)=O)CSC2
c1c([OH])c([OH,NH2,NH])ccc1
P
[N,O,S]C#N
C=C=O
[Si][F,Cl,Br,I]
[SX2]O
[SiR0,CR0](c1ccccc1)(c2ccccc2)(c3ccccc3)
O1CCCCC1OC2CCC3CCCCC3C2
N=[CR0][N,n,O,S]
[cR2]1[cR2][cR2]([Nv3X3,Nv4X4])[cR2][cR2][cR2]1[cR2]2[cR2][cR2][cR2]([Nv3X3,Nv4X4])[cR2][cR2]2
C=[C!r]C#N
[cR2]1[cR2]c([N+0X3R0,nX3R0])c([N+0X3R0,nX3R0])[cR2][cR2]1
[cR2]1[cR2]c([N+0X3R0,nX3R0])[cR2]c([N+0X3R0,nX3R0])[cR2]1
[cR2]1[cR2]c([N+0X3R0,nX3R0])[cR2][cR2]c1([N+0X3R0,nX3R0])
[OH]c1ccc([OH,NH2,NH])cc1
c1ccccc1OC(=O)O
[SX2H0][N]
c12ccccc1(SC(S)=N2)
c12ccccc1(SC(=S)N2)
c1nnnn1C=O
s1c(S)nnc1NC=O
S1C=CSC1=S
C(=O)Onnn
OS(=O)(=O)C(F)(F)F
N#CC[OH]
N#CC(=O)
S(=O)(=O)C#N
N[CH2]C#N
C1(=O)NCC1
S(=O)(=O)[O-,OH]
NC[F,Cl,Br,I]
C=[C!r]O
[NX2+0]=[O+0]
[OR0,NR0][OR0,NR0]
(C(=O)O[C,H1]).(C(=O)O[C,H1]).(C(=O)O[C,H1])
[CX2R0][NX3R0]
c1ccccc1[C;!R]=[C;!R]c2ccccc2
[NX3R0,NX4R0,OR0,SX2R0][CX4][NX3R0,NX4R0,OR0,SX2R0]
[s,S,c,C,n,N,o,O]~[n+,N+](~[s,S,c,C,n,N,o,O])(~[s,S,c,C,n,N,o,O])~[s,S,c,C,n,N,o,O]
[s,S,c,C,n,N,o,O]~[nX3+,NX3+](~[s,S,c,C,n,N])~[s,S,c,C,n,N]
[*]=[N+]=[*]
[SX3](=O)[O-,OH]
N#N
F.F.F.F
[R0;D2][R0;D2][R0;D2][R0;D2]
[cR,CR]~C(=O)NC(=O)~[cR,CR]
C=!@CC=[O,S]
[#6,#8,#16][C,c](=O)O[C,c]
c[C;R0](=[O,S])[C,c]
c[SX2][C;!R]
C=C=C
c1nc([F,Cl,Br,I,S])ncc1
c1ncnc([F,Cl,Br,I,S])c1
c1nc(c2c(n1)nc(n2)[F,Cl,Br,I])
[C,c]S(=O)(=O)c1ccc(cc1)F
[15N,13C,18O,2H,34S]</sci:value>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>FigureOut</sci:legalval>
								<sci:legalval selected="true">Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temp</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
								<sci:help>A comma separated list of global properties which will be automatically 
exported if this protocol is published as a web service.</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="nevershow" multi="false">
								<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>EmptyProtocol</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Apr 27 12:39:50 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read unwanted group file</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B39C2E91-1649-4B04-8504-F21CE6943C6B}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read Delimited Text kept with this component as a parameter value	</sci:value>
								<sci:value>This can be useful when you wish to send someone an example with the data contained with the protocol in a readable format. Just open the delimited file with a text viewer such as Notepad, copy the contents, and paste it into the &lt;I&gt;DelimitedText&lt;/I&gt; parameter.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.37</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\Debug\Delimited Text Text Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
								<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:value>$(jobdir)\temp\unwantedgroup.sma</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>What to do if the given destination file already exists</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these ecoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval selected="true">Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>create local file</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -1170</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.2.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateSGMap.1">
						<sci:component name="Substructure Map from File" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
								<sci:help>File that specifies the substructures to search for, in MDL query format (.mol or .sd) or Daylight SMARTS format (.sma).</sci:help>
								<sci:member>SourceComponent</sci:member>
								<sci:value>$(jobdir)\temp\unwantedgroup.sma</sci:value>
							</sci:arg>
							<sci:arg name="SourceComponent" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name of the component that should read the source file</sci:help>
								<sci:value>File Reader</sci:value>
							</sci:arg>
							<sci:arg name="MapType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to output &quot;AllMappings&quot; (for example, Benzene would map onto 
itself 12 ways), or &quot;UniqueMappings&quot; (no two mappings contain an identical set of atoms, so Benzene would return 1 mapping).
</sci:help>
								<sci:legalval selected="true">UniqueMappings</sci:legalval>
								<sci:legalval>AllMappings</sci:legalval>
							</sci:arg>
							<sci:arg name="MapOutput" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Specifies the properties to output:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumQueries:&lt;/b&gt; The number of queries&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumQueriesMapped:&lt;/b&gt; The number of queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;QueriesMapped:&lt;/b&gt; The name of the queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumTimesQueriesMapped:&lt;/b&gt; The number of times each successfully mapped query mapped the target&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomToAtomMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, atom-to-atom mappings are added in properties that begin with the query name and end with &quot;_Maps&quot; or &quot;_AllMapped&quot;.
&lt;br&gt;
&quot;_Maps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target atoms that map onto the corresponding query atoms.
&lt;br&gt;
&quot;_AllMapped&quot; contains the indices of all target atoms that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_Maps&lt;/b&gt;, and the list of all mapped target atoms in &lt;b&gt;Query_AllMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;BondToBondMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, bond-to-bond mappings are added in properties that begin with the query name and end with &quot;_BondMaps&quot; or &quot;_AllBondsMapped&quot;.
&lt;br&gt;
&quot;_BondMaps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target bonds that map onto the corresponding query bonds.
&lt;br&gt;
&quot;_AllBondsMapped&quot; contains the indices of all target bonds that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_BondMaps&lt;/b&gt;, and the list of all mapped target bonds in &lt;b&gt;Query_AllBondsMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;RMSD:&lt;/b&gt; Root mean squared deviation between the coordinates of the mapped atoms in the query and in the target. No alignment is performed between query and target. The rmsd is calculated using the original coordinates. This option is commonly used to calculate rmsd between prealigned molecules.
&lt;/ul&gt;</sci:help>
								<sci:legalval>NumQueries</sci:legalval>
								<sci:legalval selected="true">NumQueriesMapped</sci:legalval>
								<sci:legalval>QueriesMapped</sci:legalval>
								<sci:legalval>NumTimesQueriesMapped</sci:legalval>
								<sci:legalval>AtomToAtomMaps</sci:legalval>
								<sci:legalval>BondToBondMaps</sci:legalval>
								<sci:legalval>RMSD</sci:legalval>
							</sci:arg>
							<sci:arg name="MaximumNumberOfMaps" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies the maximum number of atom-atom mappings to return for each query. Leave blank to return all the mappings.
&lt;p&gt;
If the maximum number of maps is reached for any of the queries, the property &lt;b&gt;MaxNumMapsReached&lt;/b&gt; is defined for the input molecule.</sci:help>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>ReturnAfterFirstMap</sci:member>
								<sci:member>SeparateQueryOutputs</sci:member>
								<sci:member>SearchOptions</sci:member>
								<sci:member>RunUsingBatchSize</sci:member>
								<sci:member>NonStandardAtomType Behavior</sci:member>
								<sci:member>Reaction Matching Behavior</sci:member>
							</sci:arg>
							<sci:arg name="ReturnAfterFirstMap" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Return all mappings or just the first one discovered</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="SeparateQueryOutputs" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Separate query outputs into separate properties or use the 
Query_Maps, Query_AllMapped, Query_Names properties for all queries</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="SearchOptions" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Options for substructure searching. For maximum ISIS compatibility, select the first six options. 

Substructure Search options:

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use ISIS Aromaticity&lt;/b&gt;: Use aromaticity as done by ISIS, else use SciTegic 4n+2 Huckel aromaticity perception.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use Localized Aromatic Bonds&lt;/b&gt;:  &quot;Localized&quot; aromatic bonds are bonds for which all kekule representations have the bond always the same type (single or double).  For example, the single and double bonds in pyrrole are localized, while the bonds in pyridine are not. ISIS allows single or double bond queries to map onto localized aromatic bonds.  Setting this option will make this component compatible with ISIS with respect to these bonds.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Uncharged Atoms Can Map Charged Atoms&lt;/b&gt;: Allow uncharged query atoms to map onto charged target atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NonChiral Queries are Enantiomers&lt;/b&gt;: Queries containing stereoatoms are considered as a mixture of enantiomers rather than absolute.
&lt;p&gt;
For molecules with relative stereo groups (MDL Enhanced Stereo), this flag controls whether or not to check all the possible stereo configurations represented by the relative stereo groups when checking stereo. When the flag is OFF, only the actual stereo configurations present in the molecules (as drawn) are compared. When the flag is ON, all the possible combinations of stereo configurations for the query and the target are compared to look for a match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Chiral Queries Only Map Chiral Targets&lt;/b&gt;: A query marked Chiral can map only onto targets marked Chiral.
&lt;p&gt;
For molecules with relative stereo groups (MDL Enhanced Stereo), this flag controls whether or not check the types of stereo groups when checking stereo. When the flag is OFF, all stereo groups (ABS, OR, AND) are allowed to map each other. When the flag is ON, the matching rules for the relative stereo groups are:
&lt;ul&gt;
&lt;li&gt;ABS group in query can only map ABS group in target&lt;/li&gt;
&lt;li&gt;OR groups in query can map OR and ABS groups in target&lt;/li&gt;
&lt;li&gt;AND groups in query can map AND, OR, and ABS groups in target.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Stereo Atoms Can Map Nonstereo Atoms&lt;/b&gt;: Marked stereoatoms must map onto stereo-appropriate atoms in the targets, instead of being allowed to also map onto unknown or unmarked atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HFill if RAtoms Found&lt;/b&gt;: If RAtoms are found in the query, hydrogen-fill all other atoms; allow substituents only in the locations marked by the RAtoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Check Bonds To RAtoms&lt;/b&gt;:  Toggles the check of query features (e.g. order, Chain/Ring) on bonds to RAtoms.  By default, this option is off to match ISIS behavior.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret RAtoms Literally&lt;/b&gt;: Treat R atoms as literal atoms, rather than as query types. Useful for searching and manipulating literal RAtoms in target molecules.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret ZAtoms Literally&lt;/b&gt;: Treat R atoms as literal atoms, rather than as attachment markers. Template (Z) atoms in queries are treated as A atoms attached by a bond which can be of any type (single, double, triple, or aromatic)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret StarAtoms Literally&lt;/b&gt;: Treat Star (*) atoms as literal atoms, rather than as query features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;StarAtoms Can Map Hydrogens&lt;/b&gt;: Toggles whether Star (*) atoms can map hydrogen atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Match Cis Trans Double Bonds&lt;/b&gt;: Toggles the checking of double-bond stereo.  When this option is not checked, only the stereo for double bonds flagged with the stereo-care query feature will be checked.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Ignore Reaction Mappings&lt;/b&gt;: Toggles whether to ignore a reaction&apos;s atom-atom mappings and bond-status flags when matching against a reaction query.  When checked, only a substructure match is performed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Ignore Isotopes&lt;/b&gt;: Toggles whether to check isotope query features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Exact Match&lt;/b&gt;: Return only targets that are an exact match to the query.  That is, queries are required to match the entire target and not just a substructure of the target.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>Use ISIS Aromaticity</sci:legalval>
								<sci:legalval>Use Localized Aromatic Bonds</sci:legalval>
								<sci:legalval>Uncharged Atoms Can Map Charged Atoms</sci:legalval>
								<sci:legalval>NonChiral Queries are Enantiomers</sci:legalval>
								<sci:legalval>Chiral Queries Only Map Chiral Targets</sci:legalval>
								<sci:legalval selected="true">Stereo Atoms Can Map Nonstereo Atoms</sci:legalval>
								<sci:legalval selected="true">HFill if RAtoms Found</sci:legalval>
								<sci:legalval>Check Bonds To RAtoms</sci:legalval>
								<sci:legalval>Interpret RAtoms Literally</sci:legalval>
								<sci:legalval>Interpret ZAtoms Literally</sci:legalval>
								<sci:legalval>Interpret StarAtoms Literally</sci:legalval>
								<sci:legalval>StarAtoms Can Map Hydrogens</sci:legalval>
								<sci:legalval>Match Cis Trans Double Bonds</sci:legalval>
								<sci:legalval>Ignore Reaction Mappings</sci:legalval>
								<sci:legalval>Ignore Isotopes</sci:legalval>
								<sci:legalval>Exact Match</sci:legalval>
							</sci:arg>
							<sci:arg name="NonStandardAtomType Behavior" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Determines how atoms with NonStandardAtomType&apos;s behave in queries.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Match All Strings&lt;/b&gt;: All NonStandardAtomType strings are used in matching using a case-insensitive string comparison.  An atom will map another atom only if they both share the same NonstandardAtomType.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Match User-Specified Strings&lt;/b&gt;:  NonStandardAtomType string matching is done when the NonStandardAtomType String is one of the strings supplied in the &lt;i&gt;Match Strings&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NonStandardAtomTypes Map As StarAtoms&lt;/b&gt;: NonStandardAtomType strings are not used in mapping.  Atoms with NonstandardAtomType&apos;s are effectively treated at StarAtoms and will map any atom (including hydrogens if &lt;i&gt;StarAtoms Can Map Hydrogens&lt;/i&gt; is also enabled)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Matchable Strings</sci:member>
								<sci:legalval selected="true">Match All Strings</sci:legalval>
								<sci:legalval>Match User-Specified Strings</sci:legalval>
								<sci:legalval>NonStandardAtomTypes Map As StarAtoms</sci:legalval>
							</sci:arg>
							<sci:arg name="Matchable Strings" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Comma-delimited list of NonStandardAtomType strings that will be used in mapping when &lt;i&gt;NonStandardAtomType Behavior&lt;/i&gt; is set to &lt;i&gt;Match User-Defined Strings&lt;/i&gt;</sci:help>
								<sci:enabledscript>parameter(&quot;NonStandardAtomType Behavior&quot;) eq &quot;Match User-Specified Strings&quot;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Reaction Matching Behavior" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Determines how reaction targets are matched against molecule queries.  Note these options do not apply for reaction queries.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Reactants Or Products:&lt;/b&gt; Queries can match any part of the target reaction.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants:&lt;/b&gt; Only the reactants are checked for a substructure match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Products:&lt;/b&gt; Only the products are checked for a substructure match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants Not Products:&lt;/b&gt; Queries must match on the reactant side of the the target reaction, but not the product side.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Products Not Reactants:&lt;/b&gt; Queries must match on the product side of the the target reaction, but not the reactant side.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants And Products:&lt;/b&gt; Queries must match the target reaction on both the reactant and product sides.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Reactants Or Products</sci:legalval>
								<sci:legalval>Reactants</sci:legalval>
								<sci:legalval>Products</sci:legalval>
								<sci:legalval>Reactants Not Products</sci:legalval>
								<sci:legalval>Products Not Reactants</sci:legalval>
								<sci:legalval>Reactants And Products</sci:legalval>
							</sci:arg>
							<sci:arg name="RunUsingBatchSize" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>If a positive number is given, the queries are applied to the target molecules in batches of this size. Useful if you have tens of thousands of queries and want to avoid filling up all your memory. Depending on the size of your queries, batch sizes of 1,000 to 5,000 are reasonable.

 If left blank or set to 0, batching is not done; all queries are read into memory and the incoming molecules processed in a single pass.
</sci:help>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Substructure Map</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jul 08 11:05:53 2009</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Substructure Map from File</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9A64DD24-1128-4b83-9344-E67AC1A1E51E}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Searches each molecule for the presence of one or more substructures defined in the input query file(s)</sci:value>
								<sci:value>This component performs a substructure search for all the input molecules using queries contained in the file(s) specified by &lt;i&gt;Source&lt;/i&gt;. All the input molecules are passed unmodified through the Pass port. Several properties with mapping information can be added to each target molecule successfully mapped (only NumQueries and NumQueriesMapped can be added to target molecules that did not map any query):
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumQueries:&lt;/b&gt; The number of queries&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumQueriesMapped:&lt;/b&gt; The number of queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;QueriesMapped:&lt;/b&gt; The name of the queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumTimesQueriesMapped:&lt;/b&gt; The number of times each successfully mapped query mapped the target&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomToAtomMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, atom-to-atom mappings are added in properties that begin with the query name and end with &quot;_Maps&quot; or &quot;_AllMapped&quot;.
&lt;br&gt;
&quot;_Maps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target atoms that map onto the corresponding query atoms.
&lt;br&gt;
&quot;_AllMapped&quot; contains the indices of all target atoms that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_Maps&lt;/b&gt;, and the list of all mapped target atoms in &lt;b&gt;Query_AllMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;BondToBondMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, bond-to-bond mappings are added in properties that begin with the query name and end with &quot;_BondMaps&quot; or &quot;_AllBondsMapped&quot;.
&lt;br&gt;
&quot;_BondMaps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target bonds that map onto the corresponding query bonds.
&lt;br&gt;
&quot;_AllBondsMapped&quot; contains the indices of all target bonds that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_BondMaps&lt;/b&gt;, and the list of all mapped target bonds in &lt;b&gt;Query_AllBondsMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;RMSD:&lt;/b&gt; Root mean squared deviation between the coordinates of the mapped atoms in the query and in the target. No alignment is performed between query and target. The rmsd is calculated using the original coordinates. This option is commonly used to calculate rmsd between prealigned molecules.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See also: &lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For other substructure mapping components that perform more specific tasks, see &lt;a href=&quot;javascript:DoLink(&apos;{FB6C3F5B-E70C-4607-9945-F2040B723239}&apos;)&quot;&gt;Align Molecules using Substructure&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{DEF12DC2-CF95-11D4-9D0D-0050DA2F1AAC}&apos;)&quot;&gt;Substructure Filter from File&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{59D26471-A4FE-41b1-A136-7F4993889894}&apos;)&quot;&gt;Substructure Filter from Tag&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{22F833DF-E6BC-40B6-9C8F-EFE37907B313}&apos;)&quot;&gt;Substructure Count from Tag&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{783DA786-1BEA-490B-BE8E-2454173AC22D}&apos;)&quot;&gt;Substructure Count from File&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;
  </sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecules with mapping properties</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.5.2.300</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Chemistry\Property Calculators\Substructure Mapping\Substructure Map from File</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>
/*Calculate QED*/

/* MW*/
a := @a_MW;
b := @b_MW;
c := @c_MW;
d := @d_MW;
e := @e_MW;
f := @f_MW;
dx_max := @dx_max_MW;

MW := Molecular_Weight;
remove(&apos;Molecular_Weight&apos;);

MW_DES := ((a)+(b/(1+EXP(-1*( MW -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( MW -c-d+d/2)/f))))/dx_max;

/* AlogP*/
a := @a_AlogP;
b := @b_AlogP;
c := @c_AlogP;
d := @d_AlogP;
e := @e_AlogP;
f := @f_AlogP;
dx_max := @dx_max_AlogP;


ALOGP_DES := ((a)+(b/(1+EXP(-1*( ALOGP -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( ALOGP -c-d+d/2)/f))))/dx_max;
	
Rename(&apos;ALogP&apos;,&apos;ALOGP&apos;);

/*HBA*/
a := @a_HBA;
b := @b_HBA;
c := @c_HBA;
d := @d_HBA;
e := @e_HBA;
f := @f_HBA;
dx_max := @dx_max_HBA;

HBA := Num_H_Acceptors;
remove(&apos;Num_H_Acceptors&apos;);

HBA_DES := ((a)+(b/(1+EXP(-1*( HBA -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( HBA -c-d+d/2)/f))))/dx_max;
	
/*HBD*/	
a := @a_HBD;
b := @b_HBD;
c := @c_HBD;
d := @d_HBD;
e := @e_HBD;
f := @f_HBD;
dx_max := @dx_max_HBD;

HBD := Num_H_Donors;
remove(&apos;Num_H_Donors&apos;);

HBD_DES := ((a)+(b/(1+EXP(-1*( HBD -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( HBD -c-d+d/2)/f))))/dx_max;
	
/*PSA*/	
a := @a_PSA;
b := @b_PSA;
c := @c_PSA;
d := @d_PSA;
e := @e_PSA;
f := @f_PSA;
dx_max := @dx_max_PSA;

PSA := Molecular_PolarSurfaceArea;
remove(&apos;Molecular_PolarSurfaceArea&apos;);

PSA_DES := ((a)+(b/(1+EXP(-1*( PSA -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( PSA -c-d+d/2)/f))))/dx_max;

/*ROTB*/
a := @a_ROTB;
b := @b_ROTB;
c := @c_ROTB;
d := @d_ROTB;
e := @e_ROTB;
f := @f_ROTB;
dx_max := @dx_max_ROTB;

ROTB:= Num_RotatableBonds;
remove(&apos;Num_RotatableBonds&apos;);

ROTB_DES := ((a)+(b/(1+EXP(-1*( ROTB -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( ROTB -c-d+d/2)/f))))/dx_max;
                    

/*AROM*/
a := @a_AROM;
b := @b_AROM;
c := @c_AROM;
d := @d_AROM;
e := @e_AROM;
f := @f_AROM;
dx_max := @dx_max_AROM;

AROM:= Num_AromaticRings;
remove(&apos;Num_AromaticRings&apos;);

AROM_DES:= ((a)+(b/(1+EXP(-1*( AROM -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( AROM -c-d+d/2)/f))))/dx_max;


/*ALERTS*/
a := @a_ALERTS;
b := @b_ALERTS;
c := @c_ALERTS;
d := @d_ALERTS;
e := @e_ALERTS;
f := @f_ALERTS;
dx_max := @dx_max_ALERTS;

/*rename NumQueriesMapped as Alerts*/

ALERTS := NumQueriesMapped;
remove(&apos;NumQueriesMapped&apos;);

ALERTS_DES := ((a)+(b/(1+EXP(-1*( ALERTS -c+d/2)/e)))*
	(1-1/(1+EXP(-1*( ALERTS -c-d+d/2)/f))))/dx_max;

/*QED calculation*/
	
	/*QED unweighted numerator*/	
	#sum_unweighted :=  @UnWeight_MW     * log(MW_DES)    +
					    @UnWeight_AlogP  * log(ALOGP_DES) +
						@UnWeight_HBA    * log(HBA_DES)   + 
						@UnWeight_HBD    * log(HBD_DES)   +
						@UnWeight_PSA    * log(PSA_DES)   +
						@UnWeight_ROTB   * log(ROTB_DES)  +
						@UnWeight_AROM   * log(AROM_DES)  +
						@UnWeight_ALERTS * log(ALERTS_DES);
		
	/*QED unweighted denominator*/	
	#sum_weights_unweighted := @UnWeight_MW + @UnWeight_AlogP + @UnWeight_HBA + @UnWeight_HBD + @UnWeight_PSA + @UnWeight_ROTB + @UnWeight_AROM + @UnWeight_ALERTS;
	
	/*QED weighted numerator*/	
	#sum_weighted := @Weight_MW     * log(MW_DES)    +
				     @Weight_AlogP  * log(ALOGP_DES) +
					 @Weight_HBA    * log(HBA_DES)   + 
				     @Weight_HBD    * log(HBD_DES)   +
					 @Weight_PSA    * log(PSA_DES)   +
					 @Weight_ROTB   * log(ROTB_DES)  +
					 @Weight_AROM   * log(AROM_DES)  +
					 @Weight_ALERTS * log(ALERTS_DES);
	/*QED weighted denominator*/	
	#sum_weights_weighted := @Weight_MW + @Weight_AlogP + @Weight_HBA + @Weight_HBD + @Weight_PSA + @Weight_ROTB + @Weight_AROM + @Weight_ALERTS;

/*QED*/
QED_UNWEIGHTED := exp(#sum_unweighted/#sum_weights_unweighted);
QED_WEIGHTED   := exp(#sum_weighted/#sum_weights_weighted);


/*Format to 3 digits, no round function in PP*/
MW_DES         := format(&apos;%5.3f&apos;, MW_DES);
ALOGP_DES      := format(&apos;%5.3f&apos;, ALOGP_DES);
HBA_DES        := format(&apos;%5.3f&apos;, HBA_DES);
HBD_DES        := format(&apos;%5.3f&apos;, HBD_DES);
PSA_DES        := format(&apos;%5.3f&apos;, PSA_DES);
ROTB_DES       := format(&apos;%5.3f&apos;, ROTB_DES);
ALERTS_DES     := format(&apos;%5.3f&apos;, ALERTS_DES);
QED_UNWEIGHTED := format(&apos;%5.3f&apos;, QED_UNWEIGHTED);
QED_WEIGHTED   := format(&apos;%5.3f&apos;, QED_WEIGHTED);

/*some cleaning*/
remove(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;,&apos;f&apos;,&apos;dx_max&apos;);
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>QED Calculation</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -1545</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.ServerAction.1">
						<sci:component name="Delete File" version="2">
							<sci:arg name="Filename" type="URLType" required="true" visibility="visible" multi="false">
								<sci:help>The path name of the file to be deleted. This path should be relative to the server, since the deletion operation runs on the server file system.</sci:help>
								<sci:value>$(jobdir)\temp\unwantedgroup.sma</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Componet Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="Argument1" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameter Help</sci:help>
								<sci:value>$(Filename)</sci:value>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameter Help</sci:help>
								<sci:value>DeleteFile</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Feb 27 14:30:02 2002</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Delete File</sci:value>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{38A20EDC-8D3C-42EF-97BA-D1B40B74FFE0}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delete File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1895</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Deletes the specified file</sci:value>
								<sci:value>&lt;p&gt;The file specified by &lt;i&gt;Filename&lt;/i&gt; is deleted.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The file location is relative to the server.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Components\Data Access and Manipulation\Utilities\File Utilities\Delete File</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="0" to="1" type="true"/>
					<sci:connectid from="2" to="3" type="true"/>
					<sci:connectid from="4" to="5" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="8" to="9" type="true"/>
					<sci:version iVal="2"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Molecular Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Maximum number of table rows in the HTML page</sci:help>
						<sci:value>2000</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The number of rows displayed on each page</sci:help>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title of the HTML document</sci:help>
					</sci:arg>
					<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The property to use to display a picture caption. If this parameter is 
not set, a caption is not displayed.</sci:help>
					</sci:arg>
					<sci:arg name="Molecule Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>How to scale the molecule to the desired image size.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fixed Image Size&lt;/strong&gt;: the size of the images is the same for all the input molecules. The size of the image (in pixels) is controlled by &lt;i&gt;ImageSize&lt;/i&gt;, which specifies the width and height. The aspect ratio is set to 1 by default, but can be modified by &lt;i&gt;WidthToHeightRatio&lt;/i&gt; which sets the width as the height multiplied by the ratio. &lt;i&gt;MaximumBondLengthSize&lt;/i&gt; can be used to define a maximum limit for the length of the lines used to draw the bonds (to prevent very small molecules such as ethane to be drawn disproportionally big).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed Bond Length&lt;/strong&gt;: all the molecules are drawn with the same bond length, specified by &lt;i&gt;BondLengthSize&lt;/i&gt;. The image size depends on the size of the molecule. Small molecules create small images and big molecules create big images. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed Image Size with Fixed Bond Length&lt;/strong&gt;: the size of the images , specified by &lt;i&gt;ImageSize&lt;/i&gt;, is the same for all the input molecules but, if possible, the molecules are drawn using the bond length specified by &lt;i&gt;BondLengthSize&lt;/i&gt;. If the molecule can be drawn within the specified image size using the desired bond length, it is drawn like that, padding with white space as necessary. if the molecule is too big to be drawn with the desired bond length, it is scaled down to fit in the dimensions specified by image size. &lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>ImageSize</sci:member>
						<sci:member>BondLengthSize</sci:member>
						<sci:member>WidthToHeightRatio</sci:member>
						<sci:legalval selected="true">Fixed Image Size</sci:legalval>
						<sci:legalval>Fixed Image Size with Fixed Bond Length</sci:legalval>
					</sci:arg>
					<sci:arg name="ImageSize" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The square molecule image size to generate (in pixels).</sci:help>
						<sci:value>128</sci:value>
					</sci:arg>
					<sci:arg name="MaximumBondLengthSize" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Maximum size allowed for the lines used to draw the bonds in the molecule, in pixels. This parameter is used in conjunction with &lt;i&gt;ImageSize&lt;/i&gt; to set a limit to how long the bonds in the molecule can be. This is useful to prevent small molecules, such as ethane, to be drawn disproportionally big.
&lt;br&gt;
Leave empty if you don&apos;t want to set a limit to the bond length.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="BondLengthSize" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Size of the average bond length, in pixels.&lt;/p&gt;
&lt;p&gt;
This parameter is used when &lt;i&gt;Molecule Scaling&lt;/i&gt; is set to &quot;Fixed Bond Length&quot; or &quot;Fixed Image Size with Fixed Bond Length&quot;.
&lt;p&gt;
The size of the image will not be constant. Bigger molecules generate larger images; smaller molecules generate smaller images.</sci:help>
						<sci:member>MaximumImageSize</sci:member>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Bond Length&apos; or
parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size with Fixed Bond Length&apos;</sci:enabledscript>
						<sci:value>35</sci:value>
					</sci:arg>
					<sci:arg name="MaximumImageSize" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Maximum size allowed for the image, in pixels. This parameter is used in conjunction with &lt;i&gt;BondLengthSize&lt;/i&gt; to set a limit to how big the image can be.
&lt;br&gt;
Leave empty if you don&apos;t want to set a limit to the image size.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Bond Length&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="WidthToHeightRatio" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>The ratio of the width to the height.  When not equal to 1.0, the image height is given by &lt;i&gt;ImageSize&lt;/i&gt; and the image width is scaled to fit the given &lt;i&gt;WidthToHeightRatio&lt;/i&gt;.  

A larger &lt;i&gt;WidthToHeightRatio&lt;/i&gt; is often desired for viewing Reactions due to the presence of multiple molecules lined up horizontally.</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="Image Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>General (non-chemistry) options pertaining to how the molecular image is generated.</sci:help>
						<sci:member>ImageSize</sci:member>
						<sci:member>Caption Property</sci:member>
						<sci:member>WidthToHeightRatio</sci:member>
					</sci:arg>
					<sci:arg name="Transparent" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>If set to true, the image will be transparent. If false, the image will have a white background. Only applies to PNG images.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrueType Font File" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Path of the TrueType font to use to display the labels in the picture. Leave empty to use the default font.</sci:help>
					</sci:arg>
					<sci:arg name="Antialiasing" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether or not to use antialiasing when drawing graphic objects in the molecular image</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AtomLabelsScaleFactor" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Factor to scale the size of the atom labels (atom type, atom number, valence, value, charge).&lt;/p&gt;
&lt;p&gt;Set this factor to the default value of 1.0 to use the font size determined internally by PipelinePilot. Values greater than 1.0 will increase the font size. Values smaller than 1.0 will decrease the font size.&lt;/p&gt;  </sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="FixedFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify a fixed font size to be used to draw the text labels in the molecular image. Text labels include atom labels (atom type, charge, isotope, implicit hydrogens, query features and custom labels and numbers), bond labels (query features, custom labels and numbers), molecule caption, chiral flag and custom labels.
&lt;p&gt;
If a fixed font size is specified, the labels are always drawn with the same size, irrespective of the molecule size.
&lt;p&gt;
Leave blank to scale the font size based on the size of the molecule. </sci:help>
					</sci:arg>
					<sci:arg name="MinimumFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the minimum font size required to draw text labels for atoms, bonds and for the entire molecule (caption, chiral flag, etc). The font size used to draw these labels is calculated based on the size of the molecule. If it is smaller than the value of this parameter, labels are not drawn and heteroatoms are represented by circles with the color of the corresponding atom.
&lt;p&gt;
Leave blank to force the drawing of the text labels, even at very small font sizes.</sci:help>
						<sci:enabledscript>parameter(&apos;FixedFontSizeToDrawLabels&apos;) &lt;= 0</sci:enabledscript>
					</sci:arg>
					<sci:arg name="AtomLabelPadding" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Padding size, in percentage of the average bond length, to use around atom type labels in the molecular image. This parameter controls how much white space to leave between atom type labels and the lines representing bonds.</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="Background Color" type="ColorType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify the background color to use to draw the image.
&lt;br&gt;
&lt;i&gt;Transparent&lt;/i&gt; should be set to &apos;False&apos; for this parameter to be active.</sci:help>
						<sci:enabledscript>parameter(&quot;Transparent&quot;) eq false</sci:enabledscript>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Chemistry Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Chemistry options pertaining to how the molecular image is generated.</sci:help>
						<sci:member>DrawImplicitHydrogens</sci:member>
						<sci:member>DrawAromaticRings</sci:member>
						<sci:member>DrawUnknownDoubleBonds</sci:member>
						<sci:member>DrawFunctionalGroups</sci:member>
						<sci:member>FunctionalGroupsQueries</sci:member>
						<sci:member>AtomAttributeProperty</sci:member>
						<sci:member>AtomLabelsScaleFactor</sci:member>
						<sci:member>DisplayHighlightedAtomsAs</sci:member>
						<sci:member>ShowAtomAndBondPropertiesTables</sci:member>
						<sci:member>UseColor</sci:member>
					</sci:arg>
					<sci:arg name="DrawImplicitHydrogens" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Defines which implicit Hydrogen atoms to draw:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AllHydrogens:&lt;/b&gt;  Displays all implicit Hydrogen atoms (this option overrides the other options).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HeteroHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on heteroatoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;TerminalCarbonHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on terminal Carbon atoms.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>AllHydrogens</sci:legalval>
						<sci:legalval selected="true">HeteroHydrogens</sci:legalval>
						<sci:legalval>TerminalCarbonHydrogens</sci:legalval>
					</sci:arg>
					<sci:arg name="DrawAromaticRings" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>How to draw aromatic rings.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;UsingSingleDoubleBonds:&lt;/b&gt;  A kekule representation using alternating single and double bonds.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AsSolidCircles:&lt;/b&gt;  A solid circle is drawn inside the aromatic ring.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">UsingSingleDoubleBonds</sci:legalval>
						<sci:legalval>AsSolidCircles</sci:legalval>
					</sci:arg>
					<sci:arg name="DrawUnknownDoubleBonds" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>How to draw double bonds with unknown stereochemistry (such as in molecules read from SMILES); 
either &lt;b&gt;AsStandardDoubleBond&lt;/b&gt; or &lt;b&gt;AsCrossedLines&lt;/b&gt;.</sci:help>
						<sci:legalval selected="true">AsStandardDoubleBond</sci:legalval>
						<sci:legalval>AsCrossedLines</sci:legalval>
					</sci:arg>
					<sci:arg name="UseColor" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to true, the molecular image will be colored according to atom types.  If false, the image will be black and white only.</sci:help>
						<sci:member>H</sci:member>
						<sci:member>C</sci:member>
						<sci:member>N</sci:member>
						<sci:member>O</sci:member>
						<sci:member>P</sci:member>
						<sci:member>S</sci:member>
						<sci:member>Halogen</sci:member>
						<sci:member>Other</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="H" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw explicit Hydrogen atoms. 
&lt;br&gt;
Default is Black (0,0,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,0,0</sci:value>
					</sci:arg>
					<sci:arg name="C" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw Carbon atoms. 
&lt;br&gt;
Default is Black (0,0,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,0,0</sci:value>
					</sci:arg>
					<sci:arg name="N" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Color to use to draw Nitrogen atoms. 
&lt;br&gt;
Default is Blue (0,0,200)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,0,200</sci:value>
					</sci:arg>
					<sci:arg name="O" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw Oxygen atoms. 
&lt;br&gt;
Default is Red (200,0,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>200,0,0</sci:value>
					</sci:arg>
					<sci:arg name="P" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw Phosphorus atoms. 
&lt;br&gt;
Default is Magenta (0,200,200)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,200,200</sci:value>
					</sci:arg>
					<sci:arg name="S" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw Sulfur atoms. 
&lt;br&gt;
Default is dark yellow (200,200,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>200,200,0</sci:value>
					</sci:arg>
					<sci:arg name="Halogen" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw halogen atoms (F, Cl, Br,I). 
&lt;br&gt;
Default is Green (0,200,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,200,0</sci:value>
					</sci:arg>
					<sci:arg name="Other" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw atoms other than H, C, N, O, P, S, and halogens. 
&lt;br&gt;
Default is Black (0,0,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,0,0</sci:value>
					</sci:arg>
					<sci:arg name="DrawFunctionalGroups" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Draw specific functional groups as text instead of the actual atoms and bonds.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The functional groups to draw are defined using substructure searching with queries contained in the directory specified by &lt;i&gt;FunctionalGroupsQueries&lt;/i&gt;. The default location of the functional group queries is /data/Queries/FunctionalGroups.&lt;/li&gt;
&lt;li&gt;Each functional group query mol file must define the text to be drawn, the text color, and the core atom that connects the functional group to the rest of the molecule. Only functional groups with a single core atom are allowed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="FunctionalGroupsQueries" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>Location of the functional group queries. </sci:help>
						<sci:value>data\Queries\FunctionalGroups\*.mol</sci:value>
					</sci:arg>
					<sci:arg name="AtomAttributeProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the atom attribute that contains a value for display</sci:help>
						<sci:value>Label</sci:value>
					</sci:arg>
					<sci:arg name="DisplayHighlightedAtomsAs" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Select how to highlight selected atoms.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ColoredBlocks:&lt;/b&gt;  Display a colored block superimposed on all the selected atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ColoredLabels:&lt;/b&gt;  Color all the selected atom labels with the same highlight color.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>ColoredBlocks</sci:legalval>
						<sci:legalval selected="true">ColoredLabels</sci:legalval>
					</sci:arg>
					<sci:arg name="ShowAtomAndBondPropertiesTables" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Toggles display of the &lt;b&gt;Atom Properties&lt;/b&gt; and &lt;b&gt;Bond Properties&lt;/b&gt; table columns.  When this parameter is active, the molecule for each row is scanned for atom and bond properties.  If any are found, tables of atom and/or bond properties are displayed.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chirality Labels" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated strings with the labels to use to identify the chiral state of molecules with stereo centers. The chirality label is drawn at the top right corner of the molecular image.Six strings should be defined, with labels corresponding to the following chiral states:
&lt;ul&gt;
&lt;li&gt;Label 1: no relative stereo groups, chiral flag OFF (default: no label).&lt;/li&gt;
&lt;li&gt;Label 2: no relative stereo groups, chiral flag ON (default: &apos;chiral&apos;).&lt;/li&gt;
&lt;li&gt;Label 3: relative stereo groups defined, all centers in ABS group (default: &apos;Chiral&apos;).&lt;/li&gt;
&lt;li&gt;Label 4: relative stereo groups defined, all centers in one AND group (default: &apos;Racemic&apos;).&lt;/li&gt;
&lt;li&gt;Label 5: relative stereo groups defined, all centers in one OR group (default: &apos;Chiral Unknown&apos;).&lt;/li&gt;
&lt;li&gt;Label 6: relative stereo groups defined, all other combinations (default: &apos;Relative&apos;).&lt;/li&gt;
&lt;/ul&gt; </sci:help>
						<sci:value>,Chiral,Chiral,Racemic,Chiral Unknown,Relative</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename,newViewer</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Molecular Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Generates and displays an HTML table page of molecules and properties</sci:value>
						<sci:value>&lt;p&gt;Each row of the table corresponds to one molecule record, with columns for the structure and each property.&lt;/p&gt;

&lt;p&gt;The first column of the resulting table contains an image of the molecule.  The input coordinates are used to create the image.  If no input coordinates are present (e.g. molecules imported from SMILES), then two dimensional coordinates will be internally generated using the &lt;i&gt;2D Coords&lt;/i&gt; component.&lt;/p&gt;

&lt;p&gt;The output table is a &quot;paged table&quot;.  That is, only &lt;i&gt;Rows Per Page&lt;/i&gt; records are displayed on each HTML page.  A number of links (e.g. &quot;Next&quot;, &quot;Previous&quot;) are present on each page to let the user navigate between different ranges of the output.&lt;/p&gt;

&lt;p&gt;For molecules which have atom and/or bond properties, a table of that molecule&apos;s atom and bond properties can be displayed inside each row in the &lt;b&gt;Atom Properties&lt;/b&gt; and &lt;b&gt;Bond Properties&lt;/b&gt; columns.  The &lt;i&gt;ShowAtomAndBondPropertiesTable&lt;/i&gt; parameter toggles the generation and display of these tables.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any grouped data is displayed in nested tables. If you prefer not to view the grouped data, use the &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt; component with a blank &lt;i&gt;PackId Property&lt;/i&gt; parameter to remove it.&lt;/li&gt;
&lt;li&gt;Internally, the property &quot;PNG_Image&quot; is used for display of the molecular image.  If the &quot;PNG_Image&quot; property is preexisting on the input data record, it will be deleted and the image will be recalculated using this components Chemistry Options.  To preserve these properties, users can rename the property.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To write the HTML to a file, use the &lt;a href=&quot;javascript:DoLink(&apos;{AE1CFEA1-7CD1-408a-B7BB-58A55B6130C7}&apos;)&quot;&gt;HTML Molecular Table Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To view an HTML page of molecules grouped by property or cluster, use &lt;a href=&quot;javascript:DoLink(&apos;{6049A843-46A8-4738-9DE5-C71AB92B3215}&apos;)&quot;&gt;HTML Molecular Grouped Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{583E555F-8343-42B5-B87D-77C6D21F9043}&apos;)&quot;&gt;HTML Molecular Cluster Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.23</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="SelectedAtomsProperty" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The property name of a property containing a list of atom IDs to highlight in 
the image.</sci:help>
					</sci:arg>
					<sci:arg name="SelectedBondsProperty" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The property name of a property containing a list of bond IDs to highlight in 
the image.</sci:help>
					</sci:arg>
					<sci:arg name="HighlightColor" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>The highlight color for selected atoms or bonds</sci:help>
						<sci:legalval selected="true">Red</sci:legalval>
						<sci:legalval>Green</sci:legalval>
						<sci:legalval>Blue</sci:legalval>
						<sci:legalval>Yellow</sci:legalval>
						<sci:legalval>Cyan</sci:legalval>
						<sci:legalval>Magenta</sci:legalval>
						<sci:legalval>Black</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Oct 14 11:29:24 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{485D30CD-737C-4AD3-89C9-F81CB20E47AE}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Viewers\HTML Molecular Table Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="0" to="1" type="true"/>
			<sci:connectid from="1" to="2" type="true"/>
			<sci:version iVal="2"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
